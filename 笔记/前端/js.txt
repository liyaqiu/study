1.预解析（var和function提升到当前作用域最前面）
    var: 只提升，不赋值
    function: 只提升，不执行
2.作用域链
    调用变量的时候采用就近原则查找
3.变量声明
  方式1
    var a = 100; 局部变量
  方式2
    b = 200; 全局变量声明,会覆盖作用域链上的变量
  方式3
    var a = 10,b = 10,c = 10; 
  等价于
    var a;
    var b;
    var c;
    a = 10;
    b = 10;
    c = 10;
  方式4
    var a = b = c = 10; 等价于 
    var a; //这里做了预解析
    c = 10; //全局变量声明并赋值
    b = c; //全局变量声明并赋值
    a = b;
4.对象声明方式
  方式1
    var $ = {
      get: function(){
          alert(arguments[0])
      },
      post: function(){
          alert('post')
      },
      getName: 'name'
    }
    $.get($.getName);
  方式2
    var $ = new Object();
    $.get = function(){
        alert(1)
    }   
    $.get();

    var $ = Object;
    $.get = function(){
        alert("1235");
    }
    $.get();
  方式3
    function Obj(name,age,fun){
      this.name = name;
      this.age = age;
      this.get = fun;
    }
    var $ = new Obj('eric','31',function(){
        alert('hello');
    });
    $.get();
模仿Jquery写法
    function $(fun){
      $ = new Obj();
      fun();
    }
    function Obj(){
      this.get = function(){
          alert(2)
      }
    }
    $(function(){
      alert('init')
      $.get();
    });
es6新特性
  let 变量声明
    1.预编译不会进行变量提升
    2.同一作用域下不能重复定义同样变量
    3.块作用域
  const 常量声明
    1.跟java用法一样
    2.块作用域
  `` 反引号
    1.支持字符串换行拼接
    2.支持${name}获取变量值