spring核心
	ioc(控制反转) 将对象交给容器管理
	di（依赖注入）在容器内进行对象与对象之间的依赖注入
	aop(切面编程，用了动态代理设计模式)
		动态代理常见2种
			cglib（基于类来生成子类）
			jdk(基于接口来生成子类)
		相关概念
			1 Target (被代理对象)
			2 Proxy (代理对象)
			3 Joinpoint (连接点：被代理对象的所有方法)
			4 Pointcut (切点: 被代理对象的哪些方法需要被代理干涉)
			5 Advice (增强/通知: 需要加入哪些额外的功能)
			6 Aspect (切面：切入点+增强)
			7 Weaing (织入：配置切面的过程就是织入)
		参考文档
			https://www.cnblogs.com/wangshen31/p/9379197.html
spring事务
	编程式事务(写代码方式)			
		相关对象
			1.PlatformTransactionManager（根据不同的框架提供不同的事务实现）
			2.TransactionDefinition (定义事务的传播行为)
				传播行为分为
					required 默认使用,A调用B,B看A是否有事务，如果没有B就创建事务，如果有B就加入A的事务
					supports A调B，B看A是否有事务，如果有B就支持事务，如果没有B就不支持事务
					mandatory
					requers_new
					not_supported
					never
					nested
			3.TransactionStatus (事务的运行状态)
	声明式事务(spring xml配置以及注解配置)